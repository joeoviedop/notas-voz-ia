openapi: 3.0.3
info:
  title: Notas de Voz con IA API
  description: API para convertir audios en transcripciones, resúmenes y listas de acciones
  version: 1.0.0
  contact:
    name: Equipo de Desarrollo
    email: dev@notasdevoz.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:4000/api/v1
    description: Desarrollo local
  - url: https://api.notasdevoz.com/api/v1
    description: Producción

security:
  - BearerAuth: []

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT RS256 Access Token (15m vida)

  schemas:
    # Error Schema
    ApiError:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              type: string
              enum:
                - AUTH_INVALID_CREDENTIALS
                - AUTH_TOKEN_EXPIRED
                - FILE_TOO_LARGE
                - UNSUPPORTED_MEDIA_TYPE
                - NOTE_NOT_FOUND
                - LLM_FAILURE
                - STT_FAILURE
                - RATE_LIMITED
                - VALIDATION_ERROR
                - INTERNAL_ERROR
            message:
              type: string

    # User Schema
    User:
      type: object
      required:
        - id
        - email
        - createdAt
      properties:
        id:
          type: string
          description: ID único del usuario
        email:
          type: string
          format: email
          description: Email del usuario
        createdAt:
          type: string
          format: date-time

    # Token Schema
    TokenPair:
      type: object
      required:
        - accessToken
      properties:
        accessToken:
          type: string
          description: JWT Access Token (15 minutos)

    # Note Status
    NoteStatus:
      type: string
      enum: [idle, uploading, uploaded, transcribing, summarizing, ready, error]

    # Action Item Schema  
    Action:
      type: object
      required:
        - id
        - text
        - done
        - createdAt
      properties:
        id:
          type: string
          description: ID único de la acción
        text:
          type: string
          description: Descripción de la acción
        done:
          type: boolean
          description: Si la acción está completada
        due_suggested:
          type: string
          format: date-time
          description: Fecha sugerida para completar
        createdAt:
          type: string
          format: date-time

    # Transcript Schema
    Transcript:
      type: object
      required:
        - id
        - text
        - language
        - confidence
      properties:
        id:
          type: string
        text:
          type: string
        language:
          type: string
          example: "es"
        confidence:
          type: number
          minimum: 0
          maximum: 1

    # Summary Schema
    Summary:
      type: object
      required:
        - id
        - tl_dr
        - bullets
        - actions
      properties:
        id:
          type: string
        tl_dr:
          type: string
          description: Resumen corto
        bullets:
          type: array
          items:
            type: string
          description: Puntos clave
        actions:
          type: array
          items:
            $ref: '#/components/schemas/Action'

    # Note Schema
    Note:
      type: object
      required:
        - id
        - title
        - status  
        - createdAt
      properties:
        id:
          type: string
          description: ID único de la nota
        title:
          type: string
          description: Título de la nota
        status:
          $ref: '#/components/schemas/NoteStatus'
        createdAt:
          type: string
          format: date-time
        tags:
          type: array
          items:
            type: string
        transcript:
          $ref: '#/components/schemas/Transcript'
          nullable: true
        summary:
          $ref: '#/components/schemas/Summary'
          nullable: true
        actions:
          type: array
          items:
            $ref: '#/components/schemas/Action'

    # Media Schema
    Media:
      type: object
      required:
        - id
        - filename
        - size
        - contentType
      properties:
        id:
          type: string
        filename:
          type: string
        size:
          type: integer
        contentType:
          type: string
          example: "audio/mpeg"

    # Pagination Schema
    CursorPagination:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        cursor:
          type: string
          nullable: true
          description: Cursor para siguiente página

    # Request Schemas
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 6

    RegisterRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 6

    ResetRequestRequest:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          format: email

    ResetConfirmRequest:
      type: object
      required:
        - token
        - newPassword
      properties:
        token:
          type: string
        newPassword:
          type: string
          minLength: 6

    CreateNoteRequest:
      type: object
      properties:
        title:
          type: string
        tags:
          type: array
          items:
            type: string

    UpdateNoteRequest:
      type: object
      properties:
        title:
          type: string
        tags:
          type: array
          items:
            type: string

    CreateActionRequest:
      type: object
      required:
        - text
      properties:
        text:
          type: string
        due_suggested:
          type: string
          format: date-time

    UpdateActionRequest:
      type: object
      properties:
        text:
          type: string
        done:
          type: boolean
        due_suggested:
          type: string
          format: date-time

    # Response Schemas
    AuthResponse:
      type: object
      required:
        - user
        - tokens
      properties:
        user:
          $ref: '#/components/schemas/User'
        tokens:
          $ref: '#/components/schemas/TokenPair'

    TokenResponse:
      type: object
      required:
        - accessToken
      properties:
        accessToken:
          type: string

    NoteResponse:
      $ref: '#/components/schemas/Note'

    NotesListResponse:
      $ref: '#/components/schemas/CursorPagination'

    ActionResponse:
      $ref: '#/components/schemas/Action'

    UploadResponse:
      type: object
      required:
        - media
        - note
      properties:
        media:
          $ref: '#/components/schemas/Media'
        note:
          $ref: '#/components/schemas/Note'

paths:
  # Health Endpoints
  /health:
    get:
      operationId: healthCheck
      summary: Health check básico
      description: Verifica el estado del servicio
      security: []
      tags:
        - Health
      responses:
        '200':
          description: Servicio funcionando correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"

  # Auth Endpoints
  /auth/register:
    post:
      operationId: registerUser
      summary: Registrar usuario
      description: Crear nueva cuenta de usuario
      security: []
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: Usuario registrado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
          headers:
            Set-Cookie:
              schema:
                type: string
              description: Refresh token como httpOnly cookie
        '400':
          description: Datos de registro inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

  /auth/login:
    post:
      operationId: loginUser
      summary: Iniciar sesión
      description: Autenticar usuario con email y contraseña
      security: []
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login exitoso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
          headers:
            Set-Cookie:
              schema:
                type: string
              description: Refresh token como httpOnly cookie
        '401':
          description: Credenciales inválidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

  /auth/refresh:
    post:
      operationId: refreshToken
      summary: Renovar access token
      description: Obtener nuevo access token usando refresh token de cookie
      security: []
      tags:
        - Authentication
      responses:
        '200':
          description: Token renovado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '401':
          description: Refresh token inválido o expirado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

  /auth/logout:
    post:
      operationId: logoutUser
      summary: Cerrar sesión
      description: Invalidar refresh token y limpiar cookie
      security: []
      tags:
        - Authentication
      responses:
        '204':
          description: Logout exitoso
          headers:
            Set-Cookie:
              schema:
                type: string
              description: Cookie de refresh token eliminada

  /auth/reset/request:
    post:
      operationId: requestPasswordReset
      summary: Solicitar reset de contraseña
      description: Enviar email con token para reset de contraseña
      security: []
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetRequestRequest'
      responses:
        '200':
          description: Email de reset enviado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Reset email sent"

  /auth/reset/confirm:
    post:
      operationId: confirmPasswordReset
      summary: Confirmar reset de contraseña
      description: Establecer nueva contraseña usando token de reset
      security: []
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetConfirmRequest'
      responses:
        '200':
          description: Contraseña actualizada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Password updated"
        '400':
          description: Token inválido o expirado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

  # Notes Endpoints
  /notes:
    get:
      operationId: listNotes
      summary: Listar notas
      description: Obtener todas las notas del usuario autenticado con paginación cursor-based
      tags:
        - Notes
      parameters:
        - name: cursor
          in: query
          schema:
            type: string
          description: Cursor para paginación
        - name: query
          in: query
          schema:
            type: string
          description: Buscar por texto en título o contenido
        - name: tag
          in: query
          schema:
            type: string
          description: Filtrar por etiqueta
      responses:
        '200':
          description: Lista de notas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotesListResponse'

    post:
      operationId: createNote
      summary: Crear nota
      description: Crear nueva nota (sin audio inicialmente)
      tags:
        - Notes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNoteRequest'
      responses:
        '201':
          description: Nota creada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteResponse'
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

  /notes/{id}:
    get:
      operationId: getNote
      summary: Obtener nota
      description: Obtener detalles completos de una nota específica
      tags:
        - Notes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID de la nota
      responses:
        '200':
          description: Detalles de la nota
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteResponse'
        '404':
          description: Nota no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

    patch:
      operationId: updateNote
      summary: Actualizar nota
      description: Actualizar metadatos de la nota
      tags:
        - Notes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID de la nota
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNoteRequest'
      responses:
        '200':
          description: Nota actualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteResponse'
        '404':
          description: Nota no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

    delete:
      operationId: deleteNote
      summary: Eliminar nota
      description: Eliminar nota y sus archivos asociados
      tags:
        - Notes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID de la nota
      responses:
        '204':
          description: Nota eliminada exitosamente
        '404':
          description: Nota no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

  /notes/{id}/upload:
    post:
      operationId: uploadAudioToNote
      summary: Subir audio a nota
      description: Subir archivo de audio a una nota existente
      tags:
        - Notes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID de la nota
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - audio
              properties:
                audio:
                  type: string
                  format: binary
                  description: Archivo de audio (máx 25MB)
      responses:
        '200':
          description: Audio subido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadResponse'
        '400':
          description: Archivo inválido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: Nota no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

  # Processing Endpoints
  /notes/{id}/transcribe:
    post:
      operationId: transcribeNote
      summary: Iniciar transcripción
      description: Iniciar proceso de transcripción del audio (asíncrono)
      tags:
        - Processing
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID de la nota
      responses:
        '202':
          description: Transcripción iniciada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteResponse'
        '404':
          description: Nota no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

  /notes/{id}/summarize:
    post:
      operationId: summarizeNote
      summary: Iniciar generación de resumen
      description: Generar resumen y extraer acciones usando IA (asíncrono)
      tags:
        - Processing
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID de la nota
      responses:
        '202':
          description: Generación de resumen iniciada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteResponse'
        '404':
          description: Nota no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

  # Actions Endpoints
  /notes/{id}/actions:
    post:
      operationId: createAction
      summary: Crear acción
      description: Agregar nueva acción a una nota
      tags:
        - Actions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID de la nota
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateActionRequest'
      responses:
        '201':
          description: Acción creada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
        '404':
          description: Nota no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

  /actions/{id}:
    patch:
      operationId: updateAction
      summary: Actualizar acción
      description: Modificar texto, estado o fecha de una acción
      tags:
        - Actions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID de la acción
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateActionRequest'
      responses:
        '200':
          description: Acción actualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
        '404':
          description: Acción no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

    delete:
      operationId: deleteAction
      summary: Eliminar acción
      description: Eliminar una acción específica
      tags:
        - Actions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID de la acción
      responses:
        '204':
          description: Acción eliminada exitosamente
        '404':
          description: Acción no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

tags:
  - name: Health
    description: Endpoints de estado del servicio
  - name: Authentication
    description: Autenticación JWT RS256 con refresh tokens
  - name: Notes
    description: Gestión de notas de voz
  - name: Processing
    description: Procesamiento asíncrono (transcripción y resumen)
  - name: Actions
    description: Gestión de checklist de acciones
