# =================================
# CONFIGURACIÓN GENERAL
# =================================
NODE_ENV=development
LOG_LEVEL=info

# =================================
# CONFIGURACIÓN DEL BACKEND
# =================================
# Puerto del servidor backend
PORT=4000

# Base de datos
DATABASE_URL=postgres://user:password@localhost:5432/notas_voz_dev

# Storage de archivos (S3 compatible)
STORAGE_ENDPOINT=http://localhost:9000
STORAGE_BUCKET=notas-audio
STORAGE_ACCESS_KEY=minioadmin
STORAGE_SECRET_KEY=minioadmin123
STORAGE_REGION=us-east-1

# JWT Configuration (usar claves seguras en producción)
JWT_SECRET=__change_in_production_very_long_secret_key__
JWT_EXPIRES_IN=24h
JWT_REFRESH_EXPIRES_IN=7d

# =================================
# PROVEEDORES EXTERNOS (AI)
# =================================

# Speech-to-Text Provider
STT_PROVIDER=mock
# STT_PROVIDER=openai
# STT_PROVIDER=assemblyai

# OpenAI (para STT y LLM)
OPENAI_API_KEY=sk-your-openai-key-here
OPENAI_MODEL=gpt-4o-mini
OPENAI_STT_MODEL=whisper-1

# AssemblyAI (alternativa para STT)
ASSEMBLYAI_API_KEY=your-assemblyai-key-here

# LLM Provider
LLM_PROVIDER=mock
# LLM_PROVIDER=openai
# LLM_PROVIDER=anthropic

# Anthropic Claude
ANTHROPIC_API_KEY=sk-ant-your-anthropic-key-here
ANTHROPIC_MODEL=claude-3-haiku-20240307

# =================================
# CONFIGURACIÓN DEL FRONTEND
# =================================
NEXT_PUBLIC_API_URL=http://localhost:4000
NEXT_PUBLIC_MOCK_MODE=true
NEXT_PUBLIC_MAX_FILE_SIZE=25000000

# =================================
# MOCK SERVER (DESARROLLO)
# =================================
MOCK_PORT=5000
MOCK_ENABLED=true

# =================================
# CONFIGURACIÓN DE RATE LIMITING
# =================================
RATE_LIMIT_WINDOW_MS=60000
RATE_LIMIT_MAX_REQUESTS=100

# =================================
# CONFIGURACIÓN DE CORS
# =================================
CORS_ORIGIN=http://localhost:3000,http://localhost:3001
CORS_CREDENTIALS=true

# =================================
# MONITOREO Y OBSERVABILIDAD
# =================================
# Sentry (error tracking)
SENTRY_DSN=https://your-sentry-dsn-here@sentry.io/project-id

# Logging
LOG_FORMAT=json
LOG_FILE_PATH=./logs/app.log

# =================================
# CONFIGURACIÓN DE PRUEBAS
# =================================
TEST_DATABASE_URL=postgres://user:password@localhost:5432/notas_voz_test
TEST_STORAGE_BUCKET=notas-audio-test

# =================================
# CONFIGURACIÓN DE CI/CD
# =================================
CI=false
GITHUB_TOKEN=your-github-token-for-actions

# =================================
# CONFIGURACIONES OPCIONALES
# =================================
# Redis para caché y sesiones (opcional)
REDIS_URL=redis://localhost:6379

# Email (para notificaciones futuras)
EMAIL_PROVIDER=mock
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password

# Webhooks para integraciones futuras
WEBHOOK_SECRET=your-webhook-secret-here

# =================================
# NOTAS IMPORTANTES
# =================================
# 1. Copiar este archivo a .env y llenar con valores reales
# 2. NUNCA commitear el archivo .env al repositorio
# 3. En producción usar variables de entorno seguras
# 4. Rotar las claves JWT regularmente
# 5. Usar secretos largos y aleatorios
# 6. Configurar CORS apropiadamente para producción